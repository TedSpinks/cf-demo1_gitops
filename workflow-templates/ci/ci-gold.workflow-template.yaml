apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: ci-gold
spec:
  serviceAccountName: ci-gold
  volumes:
    - name: docker-config
      secret:
        items:
          - key: .dockerconfigjson
            path: config.json
        secretName: '{{ inputs.parameters.DOCKER_CONFIG_SECRET }}'
  entrypoint: ci-tasks
  templates:
    - name: ci-tasks
      inputs:
        parameters:
          - name: GIT_REPO_URL
          - name: IMAGE_NAME
          - name: IMAGE_TAG
            default: latest
          - name: GIT_REVISION
            default: main         # use default value if this parameter is not provided
          - name: GIT_BRANCH
            default: main
          - name: GIT_COMMIT_URL
            default: ''
          - name: GIT_COMMIT_MESSAGE
            default: ''
          - name: DOCKERFILE
            default: Dockerfile
          # Create git secret token and apply it to your cluster under the runtime namespace
          # kubectl create secret generic github-token \
          #     --from-literal=token="ghp_abc123..." \
          #     --from-literal=username=my-git-svc-account \
          #     --from-literal=email=my-git-svc-account@example.com
          - name: GIT_TOKEN_SECRET
            default: github-token # the name of the git secret token you applied to your cluster
          - name: CONTEXT
            default: .
          # Create registry-creds secret and apply it to your cluster under the runtime namespace
          # Different registries have slightly differen auth requirements: https://github.com/codefresh-io/argo-hub/blob/main/workflows/codefresh-csdp/versions/0.0.6/docs/report-image-info.md
          # kubectl create secret generic registry-creds \
          #     --from-literal=username="my-registry-account" \
          #     --from-literal=password="abc123" \
          #     --from-literal=domain=quay.io
          - name: REGISTRY_CREDS_SECRET
            default: registry-creds  # the name of the registry-creds secret you created
          # Create a docker-registry secret with your docker credentials and apply it to your cluster under the runtime namespace
          # kubectl create secret docker-registry docker-registry --docker-server=quay.io \
          #     --docker-username="my-registry-account" --docker-password="abc123" \
          #     --docker-email=my-registry-account@example.com
          - name: DOCKER_CONFIG_SECRET
            default: docker-config  # the name of the registry-creds secret you created
          - name: CF_API_KEY
            default: codefresh-token
          - name: CF_V1_TOKEN
            default: codefresh-v1-token
          - name: JIRA_PROJECT_PREFIX
            default: 'KPT'
          - name: JIRA_HOST
            default: 'cf-demo-jira.atlassian.net'
          - name: JIRA_API_TOKEN_SECRET
            default: 'jira-creds'
          - name: REPO_SLUG
          - name: GIT_AUTHOR
            default: ''
          - name: GITOPS_REPO_URL
            default: "https://github.com/codefresh-contrib/cf-demo1_gitops.git"
      dag:
        tasks:
          # https://codefresh.io/argohub/workflow-template/kaniko
          - name: build-docker-image
            templateRef:
              name: argo-hub.kaniko.0.0.1
              template: build
            arguments:
              parameters:
                - name: REPO
                  value: '{{ inputs.parameters.GIT_REPO_URL }}'
                - name: REVISION
                  value: '{{ inputs.parameters.GIT_REVISION }}'
                - name: IMAGE_NAME
                  value: '{{ inputs.parameters.IMAGE_NAME }}'
                - name: GIT_TOKEN_SECRET
                  value: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
                - name: DOCKERFILE
                  value: '{{ inputs.parameters.DOCKERFILE }}'
                - name: CONTEXT
                  value: '{{ inputs.parameters.CONTEXT }}'
                - name: TAG
                  value: '{{ inputs.parameters.IMAGE_TAG }}'

          # Report the quay image to codefresh and enrich it with jira & PR info
          - name: report-and-enrich-image-quay
            templateRef:
              name: report-and-enrich-image
              template: report-and-enrich-image
            arguments:
              parameters:
                - name: DOCKER_IMAGE
                  value: '{{ inputs.parameters.IMAGE_NAME }}:{{ inputs.parameters.IMAGE_TAG }}'
                - name: REGISTRY_PROVIDER
                  value: 'quay'
                - name: REGISTRY_CREDS_SECRET
                  value: '{{ inputs.parameters.REGISTRY_CREDS_SECRET }}'

                - name: CF_API_KEY
                  value: '{{ inputs.parameters.CF_API_KEY }}' # this secret is created as part of the runtime installation
                - name: CF_V1_TOKEN
                  value: '{{ inputs.parameters.CF_V1_TOKEN }}'

                - name: GIT_AUTHOR
                  value: '{{ inputs.parameters.GIT_AUTHOR }}'
                - name: GIT_REVISION
                  value: '{{ inputs.parameters.GIT_REVISION }}'
                - name: GIT_BRANCH
                  value: '{{ inputs.parameters.GIT_BRANCH }}'
                - name: GIT_COMMIT_URL
                  value: '{{ inputs.parameters.GIT_COMMIT_URL }}'
                - name: GIT_COMMIT_MESSAGE
                  value: '{{ inputs.parameters.GIT_COMMIT_MESSAGE }}'
                - name: GIT_TOKEN_SECRET
                  value: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'

                - name: JIRA_PROJECT_PREFIX
                  value: '{{ inputs.parameters.JIRA_PROJECT_PREFIX }}'
                - name: JIRA_HOST
                  value: '{{ inputs.parameters.JIRA_HOST }}'
                - name: JIRA_API_TOKEN_SECRET
                  value: '{{ inputs.parameters.JIRA_API_TOKEN_SECRET }}'
                - name: REPO_SLUG
                  value: '{{ inputs.parameters.REPO_SLUG }}'

                # Link back to the workflow
                - name: WORKFLOW_NAME
                  value: '{{ workflow.name }}'
            depends: build-docker-image

          - name: test-image
            template: test
            arguments:
              parameters:
                - name: IMAGE
                  value: '{{ inputs.parameters.IMAGE_NAME }}:{{ inputs.parameters.IMAGE_TAG }}'
            depends: report-and-enrich-image-quay

          - name: promote-kustomize-image
            templateRef:
              name: argo-hub.gitops-promotion.0.0.1
              template: promote-to-env
            arguments:
              parameters:
                # Git
                - name: git-repo-url
                  value: '{{ inputs.parameters.GITOPS_REPO_URL }}'
                - name: git-auth-secret
                  value: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
                - name: git-commit-msg
                  value: '{{ inputs.parameters.GIT_COMMIT_MESSAGE }}'
                # Replacement Substrings
                - name: value-to-promote
                  value: '{{ inputs.parameters.IMAGE_TAG }}'
                - name: env
                  value: dev
                - name: svc-name-list
                  value: "{{=sprig.trimPrefix('quay.io/codefresh_sa/',inputs.parameters.IMAGE_NAME)}}"
                # Pattern Strings
                - name: file-path-pattern
                  value: "k8s-resources/[[SVC_NAME]]/overlays/[[ENV]]/kustomization.yaml"
                - name: promotion-type
                  value: kustomize-image
                - name: kust-image-pattern
                  value: "quay.io/codefresh_sa/[[SVC_NAME]]"
            depends: test-image
            when: |- 
              '{{inputs.parameters.IMAGE_NAME}}' == 'quay.io/codefresh_sa/color' ||
              '{{inputs.parameters.IMAGE_NAME}}' == 'quay.io/codefresh_sa/express'

          - name: promote-helm-value
            templateRef:
              name: argo-hub.gitops-promotion.0.0.1
              template: promote-to-env 
            arguments:
              parameters:
                # Git
                - name: git-repo-url
                  value: '{{ inputs.parameters.GITOPS_REPO_URL }}'
                - name: git-auth-secret
                  value: '{{ inputs.parameters.GIT_TOKEN_SECRET }}'
                - name: git-commit-msg
                  value: '{{ inputs.parameters.GIT_COMMIT_MESSAGE }}'
                # Replacement Substrings
                - name: value-to-promote
                  value: '{{ inputs.parameters.IMAGE_TAG }}'
                - name: env
                  value: dev
                - name: svc-name-list
                  value: "{{=sprig.trimPrefix('quay.io/codefresh_sa/',inputs.parameters.IMAGE_NAME)}}"
                # Pattern Strings
                - name: file-path-pattern
                  value: "k8s-resources/trio/[[ENV]]/values.yaml"
                - name: promotion-type
                  value: helm-value
                - name: yaml-key-pattern    # YAML key pattern within the values.yaml files
                  value: ".[[SVC_NAME]].image.tag"
            depends: test-image
            when: |- 
              '{{inputs.parameters.IMAGE_NAME}}' == 'quay.io/codefresh_sa/buslog' ||
              '{{inputs.parameters.IMAGE_NAME}}' == 'quay.io/codefresh_sa/ctrlr' ||
              '{{inputs.parameters.IMAGE_NAME}}' == 'quay.io/codefresh_sa/flask-ui'

    # Test template
    - name: test
      inputs:
        parameters:
          - name: IMAGE
      container:
        image: '{{ inputs.parameters.IMAGE }}'
        command: [sh, -c]
        args: ["ls"]